const app = require('../app');
const debug = require('debug')('controlio:server');
const https = require('https');
const fs = require('fs');
const path = require('path');

const privateKey  = fs.readFileSync(path.join(__dirname, '../certificates/ssl/privkey.pem'), 'utf8');
const certificate = fs.readFileSync(path.join(__dirname, '../certificates/ssl/cert.pem'), 'utf8');

var credentials = {key: privateKey, cert: certificate};

const port = 8443;
app.set('port', port);

const server = https.createServer(credentials, app);

server.listen(port);
server.on('error', error => {
  if (error.syscall !== 'listen') {
    throw error;
  }
  switch (error.code) {
    case 'EACCES':
      console.error(`Port ${port} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`Port ${port} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
});

server.on('listening', () => {
  debug(`Listening on port ${server.address().port}`);
});
